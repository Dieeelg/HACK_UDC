{"ast":null,"code":"const axios=require('axios');const CLIENT_ID='oauth-mkpsbox-oauthmmrudcfqgxbeubxzfssnbxpro';const CLIENT_SECRET='~I*IEVQZ6fw{4u1g';const TOKEN_URL='https://auth.inditex.com/openam/oauth2/itxid/itxidmp/sandbox/access_token';const getAccessToken=async()=>{try{// Usar URLSearchParams para codificar el cuerpo de la solicitud\nconst params=new URLSearchParams();params.append('grant_type','client_credentials');// Esto podría variar dependiendo del flujo de OAuth\nparams.append('client_id',CLIENT_ID);params.append('client_secret',CLIENT_SECRET);const response=await axios.post(TOKEN_URL,params.toString(),{headers:{'Content-Type':'application/x-www-form-urlencoded'}});// Si la solicitud es exitosa, el access_token estará en la respuesta\nconsole.log('Access Token:',response.data.access_token);}catch(error){console.error('Error al obtener el token:',error);}};getAccessToken();","map":{"version":3,"names":["axios","require","CLIENT_ID","CLIENT_SECRET","TOKEN_URL","getAccessToken","params","URLSearchParams","append","response","post","toString","headers","console","log","data","access_token","error"],"sources":["C:/Users/Usuario/WebstormProjects/inditex-visual-search/src/App.js"],"sourcesContent":["const axios = require('axios');\n\nconst CLIENT_ID = 'oauth-mkpsbox-oauthmmrudcfqgxbeubxzfssnbxpro';\nconst CLIENT_SECRET = '~I*IEVQZ6fw{4u1g';\nconst TOKEN_URL = 'https://auth.inditex.com/openam/oauth2/itxid/itxidmp/sandbox/access_token';\n\nconst getAccessToken = async () => {\n  try {\n    // Usar URLSearchParams para codificar el cuerpo de la solicitud\n    const params = new URLSearchParams();\n    params.append('grant_type', 'client_credentials'); // Esto podría variar dependiendo del flujo de OAuth\n    params.append('client_id', CLIENT_ID);\n    params.append('client_secret', CLIENT_SECRET);\n\n    const response = await axios.post(TOKEN_URL, params.toString(), {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n\n    // Si la solicitud es exitosa, el access_token estará en la respuesta\n    console.log('Access Token:', response.data.access_token);\n  } catch (error) {\n    console.error('Error al obtener el token:', error);\n  }\n};\n\ngetAccessToken();"],"mappings":"AAAA,KAAM,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAO,CAAC,CAE9B,KAAM,CAAAC,SAAS,CAAG,8CAA8C,CAChE,KAAM,CAAAC,aAAa,CAAG,kBAAkB,CACxC,KAAM,CAAAC,SAAS,CAAG,2EAA2E,CAE7F,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACF;AACA,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CAAC,CACpCD,MAAM,CAACE,MAAM,CAAC,YAAY,CAAE,oBAAoB,CAAC,CAAE;AACnDF,MAAM,CAACE,MAAM,CAAC,WAAW,CAAEN,SAAS,CAAC,CACrCI,MAAM,CAACE,MAAM,CAAC,eAAe,CAAEL,aAAa,CAAC,CAE7C,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAT,KAAK,CAACU,IAAI,CAACN,SAAS,CAAEE,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAE,CAC9DC,OAAO,CAAE,CACP,cAAc,CAAE,mCAClB,CACF,CAAC,CAAC,CAEF;AACAC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEL,QAAQ,CAACM,IAAI,CAACC,YAAY,CAAC,CAC1D,CAAE,MAAOC,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CAEDZ,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}