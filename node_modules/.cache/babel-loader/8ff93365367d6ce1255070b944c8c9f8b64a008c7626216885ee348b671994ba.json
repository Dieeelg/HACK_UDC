{"ast":null,"code":"const axios = require('axios');\nconst CLIENT_ID = 'oauth-mkpsbox-oauthmmrudcfqgxbeubxzfssnbxpro';\nconst CLIENT_SECRET = '~I*IEVQZ6fw{4u1g';\nconst TOKEN_URL = 'https://auth.inditex.com/openam/oauth2/itxid/itxidmp/sandbox/access_token';\nconst getAccessToken = async () => {\n  try {\n    // Usar URLSearchParams para codificar el cuerpo de la solicitud\n    const params = new URLSearchParams();\n    params.append('grant_type', 'client_credentials'); // Esto podría variar dependiendo del flujo de OAuth\n    params.append('client_id', CLIENT_ID);\n    params.append('client_secret', CLIENT_SECRET);\n    const response = await axios.post(TOKEN_URL, params.toString(), {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n\n    // Si la solicitud es exitosa, el access_token estará en la respuesta\n    console.log('Access Token:', response.data.access_token);\n  } catch (error) {\n    console.error('Error al obtener el token:', error);\n  }\n};\ngetAccessToken();","map":{"version":3,"names":["axios","require","CLIENT_ID","CLIENT_SECRET","TOKEN_URL","getAccessToken","params","URLSearchParams","append","response","post","toString","headers","console","log","data","access_token","error"],"sources":["C:/Users/Usuario/WebstormProjects/inditex-visual-search/src/App.js"],"sourcesContent":["const axios = require('axios');\n\nconst CLIENT_ID = 'oauth-mkpsbox-oauthmmrudcfqgxbeubxzfssnbxpro';\nconst CLIENT_SECRET = '~I*IEVQZ6fw{4u1g';\nconst TOKEN_URL = 'https://auth.inditex.com/openam/oauth2/itxid/itxidmp/sandbox/access_token';\n\nconst getAccessToken = async () => {\n  try {\n    // Usar URLSearchParams para codificar el cuerpo de la solicitud\n    const params = new URLSearchParams();\n    params.append('grant_type', 'client_credentials'); // Esto podría variar dependiendo del flujo de OAuth\n    params.append('client_id', CLIENT_ID);\n    params.append('client_secret', CLIENT_SECRET);\n\n    const response = await axios.post(TOKEN_URL, params.toString(), {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n\n    // Si la solicitud es exitosa, el access_token estará en la respuesta\n    console.log('Access Token:', response.data.access_token);\n  } catch (error) {\n    console.error('Error al obtener el token:', error);\n  }\n};\n\ngetAccessToken();"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMC,SAAS,GAAG,8CAA8C;AAChE,MAAMC,aAAa,GAAG,kBAAkB;AACxC,MAAMC,SAAS,GAAG,2EAA2E;AAE7F,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF;IACA,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,MAAM,CAAC,YAAY,EAAE,oBAAoB,CAAC,CAAC,CAAC;IACnDF,MAAM,CAACE,MAAM,CAAC,WAAW,EAAEN,SAAS,CAAC;IACrCI,MAAM,CAACE,MAAM,CAAC,eAAe,EAAEL,aAAa,CAAC;IAE7C,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACN,SAAS,EAAEE,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAE;MAC9DC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;;IAEF;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAACM,IAAI,CAACC,YAAY,CAAC;EAC1D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACpD;AACF,CAAC;AAEDZ,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}